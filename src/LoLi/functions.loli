(def .. (\ (start end)
	(if (eq? start end)
		(cons end nil)
		(cons start (.. (add1 start) end)))))

(def null? (\ (obj)
	(eq? nil obj)))

(def append (\ (lsta lstb)
	(if (null? lsta)
		lstb
		(cons (head lsta) (append (tail lsta) lstb)))))

(def pow (\ (base pow)
	(if (eq? pow 0)
		1
		(* base (pow base (- pow 1))))))
